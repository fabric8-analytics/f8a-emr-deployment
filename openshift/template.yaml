apiVersion: v1
kind: Template
labels:
  template: f8a-emr-deployment
metadata:
  name: f8a-emr-deployment
  annotations:
    description: f8a-emr-deployment
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: f8a-emr-deployment
    name: f8a-emr-deployment
  spec:
    replicas: "${{REPLICAS}}"
    selector:
      service: f8a-emr-deployment
    template:
      metadata:
        labels:
          service: f8a-emr-deployment
      spec:
        serviceAccountName: dsaas-deploy
        containers:
        - command:
          - /bin/entrypoint.sh
          env:
          - name: DEPLOYMENT_PREFIX
            valueFrom:
              configMapKeyRef:
                name: bayesian-config
                key: deployment-prefix
          - name: AWS_S3_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: s3-access-key-id
                name: aws
          - name: AWS_S3_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: s3-secret-access-key
                name: aws
          - name: AWS_EMR_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: aws_access_key_id
                name: aws-emr
          - name: AWS_EMR_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: aws_secret_access_key
                name: aws-emr
          - name: FLASK_LOGGING_LEVEL
            value: ${FLASK_LOGGING_LEVEL}
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                key: github_token
                name: github
          - name: FABRIC8_ANALYTICS_JWT_AUDIENCE
            value: "fabric8-online-platform,openshiftio-public,https://prod-preview.openshift.io,https://openshift.io"
          - name: OSIO_AUTH_URL
            valueFrom:
              configMapKeyRef:
                key: auth-url
                name: bayesian-config
          - name: SERVICE_PORT
            value: "6006"
          - name: SERVICE_TIMEOUT
            value: "900"
          name: f8a-emr-deployment
          image: "${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_TAG}"
          ports:
          - containerPort: 6006
          livenessProbe:
            httpGet:
              path: /api/v1/liveness
              port: 6006
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/v1/readiness
              port: 6006
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 30
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: f8a-emr-deployment
    name: f8a-emr-deployment
  spec:
    ports:
    - port: 6006
      targetPort: 0
    selector:
      service: f8a-emr-deployment

parameters:
- description: CPU request
  displayName: CPU request
  required: true
  name: CPU_REQUEST
  value: "250m"

- description: CPU limit
  displayName: CPU limit
  required: true
  name: CPU_LIMIT
  value: "250m"

- description: Memory request
  displayName: Memory request
  required: true
  name: MEMORY_REQUEST
  value: "250Mi"

- description: Memory limit
  displayName: Memory limit
  required: true
  name: MEMORY_LIMIT
  value: "250Mi"

- description: Docker registry where the image is
  displayName: Docker registry
  required: true
  name: DOCKER_REGISTRY
  value: "quay.io"

- description: Docker image to use
  displayName: Docker image
  required: true
  name: DOCKER_IMAGE
  value: "openshiftio/rhel-fabric8-analytics-f8a-emr-deployment"

- description: Number of deployment replicas
  displayName: Number of deployment replicas
  required: true
  name: REPLICAS
  value: "1"

- description: Image tag
  displayName: Image tag
  required: true
  name: IMAGE_TAG
  value: "latest"

- description: "Flask logging level (see: https://docs.python.org/3/library/logging.html#levels)"
  displayName: Flask logging level
  required: false
  name: FLASK_LOGGING_LEVEL
  value: "ERROR"

